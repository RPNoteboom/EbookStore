/*  Name:  Richard Noteboom
    Course:CNT 4714 –Summer2020
    Assignment title:Project1 –Event-driven Enterprise Simulation
    Date:Sunday May 31, 2020*/
package my.ebookstore;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author Richard Noteboom
 */
public class EbookStoreUI extends javax.swing.JFrame {

    /**
     * Creates new form EbookStoreUI
     */
    public EbookStoreUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frame = new javax.swing.JOptionPane();
        jPanel1 = new javax.swing.JPanel();
        fieldItems = new javax.swing.JTextField();
        fieldId = new javax.swing.JTextField();
        fieldQuantity = new javax.swing.JTextField();
        fieldInfo = new javax.swing.JTextField();
        fieldSubtotal = new javax.swing.JTextField();
        labelItems = new javax.swing.JLabel();
        labelId = new javax.swing.JLabel();
        labelQuantity = new javax.swing.JLabel();
        labelInfo = new javax.swing.JLabel();
        labelSubtotal = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        buttonProcess = new javax.swing.JButton();

        buttonConfirm = new javax.swing.JButton();
        buttonConfirm.setEnabled(false);
        buttonView = new javax.swing.JButton();
        buttonView.setEnabled(false);
        buttonFinish = new javax.swing.JButton();
        buttonFinish.setEnabled(false);
        buttonNew = new javax.swing.JButton();
        buttonExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("The Old Book Store");

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setName(""); // NOI18N

        fieldItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldItemsActionPerformed(evt);
            }
        });

        labelItems.setForeground(new java.awt.Color(255, 255, 0));
        labelItems.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelItems.setText("Enter number of items in this order:");

        labelId.setForeground(new java.awt.Color(255, 255, 0));
        labelId.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelId.setText("Enter Book ID for item #1:");

        labelQuantity.setForeground(new java.awt.Color(255, 255, 0));
        labelQuantity.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelQuantity.setText("Enter quantity for item #1:");

        labelInfo.setForeground(new java.awt.Color(255, 255, 0));
        labelInfo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelInfo.setText("Item #1 info:");

        labelSubtotal.setForeground(new java.awt.Color(255, 255, 0));
        labelSubtotal.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelSubtotal.setText("Order subtotal for 0 item(s):");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(labelInfo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelQuantity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelItems, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                    .addComponent(labelSubtotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fieldId)
                    .addComponent(fieldQuantity)
                    .addComponent(fieldInfo)
                    .addComponent(fieldSubtotal)
                    .addComponent(fieldItems))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelItems))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelQuantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelInfo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSubtotal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonProcess.setText("Process Item #1");
        buttonProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonProcessActionPerformed(evt);
            }
        });

        buttonConfirm.setText("Confirm Item #1");
        buttonConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmActionPerformed(evt);
            }
        });

        buttonView.setText("View Order");
        buttonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonViewActionPerformed(evt);
            }
        });

        buttonFinish.setText("Finish Order");
        buttonFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFinishActionPerformed(evt);
            }
        });

        buttonNew.setText("New Order");
        buttonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewActionPerformed(evt);
            }
        });

        buttonExit.setText("Exit");
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(buttonView, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonFinish)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonNew, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonExit)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonProcess)
                    .addComponent(buttonConfirm)
                    .addComponent(buttonView)
                    .addComponent(buttonFinish)
                    .addComponent(buttonNew)
                    .addComponent(buttonExit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldItemsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldItemsActionPerformed

    private void buttonConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmActionPerformed
        //Check for Item Info
        //If none match then display error
        if (matched == false){
            JOptionPane.showMessageDialog(frame,"Book ID " + Integer.parseInt(fieldId.getText()) + " not in file","Invalid Book ID",JOptionPane.ERROR_MESSAGE);
            buttonConfirm.setEnabled(false);
            buttonProcess.setEnabled(true);
        }
        //else display Accept box and write to transaction.txt
        else{
            JOptionPane.showMessageDialog(frame, "Item #" + item + " accepted");
            //check if there is another item in the order 
            if (item < items){
                //if so re-enable buttonProcess and increment item
                buttonProcess.setEnabled(true);
                item++;
                //update all labels
                labelId.setText("Enter Book ID for Item #" + item + ":");
                labelQuantity.setText("Enter quantity for Item #" + item + ":");
                buttonProcess.setText("Process Item #" + item);
                buttonConfirm.setText("Confirm Item #" + item);
            }
            else if (item == items){
                labelId.setText("");
                fieldId.setEnabled(false);
                labelQuantity.setText("");
                fieldQuantity.setEnabled(false);
            }
            else
                JOptionPane.showMessageDialog(frame,"Error: Item(" + item + ") has exceeded Items(" + items + ")", "Error",JOptionPane.ERROR_MESSAGE);
            //adjust button states
            buttonView.setEnabled(true);
            buttonFinish.setEnabled(true);
            buttonConfirm.setEnabled(false);
            matched = false;
            //record transaction and increment subtotal label
            labelSubtotal.setText("Order subtotal for " + (item - 1) + " item(s):"); //fix later
            fieldSubtotal.setText("" + subtotal);
        }
    }//GEN-LAST:event_buttonConfirmActionPerformed

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_buttonExitActionPerformed

    private void buttonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewActionPerformed
        //Reset Everything
        item = 1;
        matched = false;
        subtotal = 0;
        fieldItems.setText("");
        fieldItems.setEnabled(true);
        fieldId.setText("");
        fieldId.setEnabled(true);
        labelId.setText("Enter Book ID for Item #1:");
        fieldQuantity.setText("");
        fieldQuantity.setEnabled(true);
        labelQuantity.setText("Enter quantity for Item #1:");
        fieldInfo.setText("");
        labelInfo.setText("Item #1 info:");
        fieldSubtotal.setText("");
        labelSubtotal.setText("Order subtotal for 0 item(s):");
        buttonProcess.setText("Process Item #1");
        buttonProcess.setEnabled(true);
        buttonConfirm.setText("Confirm Item #1");
        buttonConfirm.setEnabled(false);
        buttonView.setEnabled(false);
        buttonFinish.setEnabled(false);
    }//GEN-LAST:event_buttonNewActionPerformed

    private void buttonProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonProcessActionPerformed
        //save numbers of items and disable field
        items = Integer.parseInt(fieldItems.getText());
        quantity = Integer.parseInt(fieldQuantity.getText());
        //determine discount based on quantity ordered
        if(quantity <= 4)
            discount = 0;
        else if(quantity >= 5 && quantity <= 9)
            discount = 10;
        else if(quantity <= 10 && quantity >= 14)
            discount = 15;
        else if(quantity >= 15)
            discount = 20;
        else
            discount = 0;
        fieldItems.setEnabled(false);
        //File file =  new File("inventory.txt");
        try {
            Scanner scanner = new Scanner(new File("src/my/ebookstore/inventory.txt"));
            scanner.useDelimiter(",");
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                String[] entry = line.split(", ");
                if(Integer.parseInt(entry[0]) == Integer.parseInt(fieldId.getText())){
                    matched = true;
                    double price = ((quantity * Double.parseDouble(entry[2])) - (quantity * Double.parseDouble(entry[2]) * (discount / 100.0)));
                    fieldInfo.setText(entry[0] + " " + entry[1] + " $" + entry[2] 
                            + " " + quantity + " " + discount + "% $" 
                            + BigDecimal.valueOf(price).setScale(2, RoundingMode.HALF_UP).doubleValue());
                    cartItems.add(fieldInfo.getText());
                    subtotal += price;
                }
                //System.out.println(entry[0]);
            }
        } 
        catch (FileNotFoundException e) {
            System.out.println("No File");
        }
        buttonConfirm.setEnabled(true);
        buttonProcess.setEnabled(false);
        labelInfo.setText("Item #" + item + " info:");
    }//GEN-LAST:event_buttonProcessActionPerformed

    private void buttonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonViewActionPerformed
        //Show info pane with current transactions
        String view = "";
        for(int i = 0; i < cartItems.size(); i++){
            String everything = cartItems.get(i).toString();

            view += (i+1) +". "+ everything + "\n";       
        }
        JOptionPane.showMessageDialog(null, view);
    }//GEN-LAST:event_buttonViewActionPerformed

    private void buttonFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFinishActionPerformed
        //Show full reciept with all necessary information
        String finish = "";
        for(int i = 0; i < cartItems.size(); i++){
            String everything = cartItems.get(i).toString();

            finish += (i+1) + ". " + everything + "\n";       
        }
        JOptionPane.showMessageDialog(null, "Date:\n" + "Number of line items: " 
                + items + "\n" + finish + "Order Subtotal: \n" + "Tax Rate: 6%\n"
                + "Tax amount:" + (subtotal * .06) + "\nOrder Total:" 
                + ((subtotal * .06) + subtotal) + "\nThanks for shopping at The Old Book Shop!");
        //Create (print) receipt to transactions.txt
        try {
        File transaction = new File("transaction.txt");
            if (transaction.createNewFile()) {
            System.out.println("File created: " + transaction.getName());
            } 
            else {
            System.out.println("File already exists.");
            }
        } catch (IOException e) {
        System.out.println("An error occurred.");
        e.printStackTrace();
        }
        /*FileWriter writer = new FileWriter("transaction.txt"); 
        for(String str: cartItems) {
            writer.write(str + System.lineSeparator());
        }
        writer.close();*/
    }//GEN-LAST:event_buttonFinishActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EbookStoreUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EbookStoreUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EbookStoreUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EbookStoreUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EbookStoreUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonConfirm;
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton buttonFinish;
    private javax.swing.JButton buttonNew;
    private javax.swing.JButton buttonProcess;
    private javax.swing.JButton buttonView;
    private javax.swing.JTextField fieldId;
    private javax.swing.JTextField fieldInfo;
    private javax.swing.JTextField fieldItems;
    public int item = 1;
    public int items;
    public int quantity;
    public int discount;
    public boolean matched;
    public double subtotal = 0;
    ArrayList<String> cartItems = new ArrayList<>();
    private javax.swing.JTextField fieldQuantity;
    private javax.swing.JTextField fieldSubtotal;
    private javax.swing.JOptionPane frame;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel labelId;
    private javax.swing.JLabel labelInfo;
    private javax.swing.JLabel labelItems;
    private javax.swing.JLabel labelQuantity;
    private javax.swing.JLabel labelSubtotal;
    // End of variables declaration//GEN-END:variables
}
